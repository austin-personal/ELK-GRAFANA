input {
  beats {
    port => 5044
  }
}

filter {
  # 로그 형식에 따라 필드 파싱
  # Flask 앱 로그가 단순 텍스트 라면, Grok 패턴 사용 가능
  # 예: 2024-12-09 10:23:45 INFO Received /buy request
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:msg}" }
  }
  date {
    match => ["timestamp", "ISO8601"]
  }

  # Nginx Access 로그 예: 127.0.0.1 - - [09/Dec/2024:10:23:45 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0"
  if "nginx" in [path] {
    grok {
      match => { "message" => "%{IPORHOST:clientip} - - \[%{HTTPDATE:nginx_timestamp}\] \"%{WORD:method} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{DATA:useragent}\"" }
      remove_field => ["message"]
    }
    date {
      match => ["nginx_timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
      remove_field => ["nginx_timestamp"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "my-logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "changeme"
  }
}
