services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 20s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5602:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    depends_on:
      - elasticsearch
    volumes:
      - ./elk/logstash/pipeline/:/usr/share/logstash/pipeline/
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
    ports:
      - "5044:5044"

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.0
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    ports:
      - "8200:8200"

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    depends_on:
      - logstash
    volumes:
      - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      # 로그 디렉토리 마운트: 실제 로그 파일이 존재하는 디렉토리 필요 시 추가
      # 예: - ./logs/:/usr/share/filebeat/logs/:ro
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme

  backend:
    build: ./backend
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ELASTIC_APM_SERVICE_NAME=my-flask-app
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
    depends_on:
      - apm-server
    ports:
      - "4999:4999"
    # filebeats가 로그 읽도록
    volumes:
      - ./logs/backend:/app/logs

  nginx:
    image: nginx:latest
    depends_on:
      - backend
    volumes:
      # 정적 리소스: backend/templates 폴더를 nginx html 루트로 사용
      - ./backend/templates:/usr/share/nginx/html:ro
      # Nginx 설정 파일
      - ./nginx/conf.d/defualt.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    # 로그 수집을 위해 Nginx 로그 마운트 (필요하다면):
    # volumes:
    #   - ./logs/nginx:/var/log/nginx